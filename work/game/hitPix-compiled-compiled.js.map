{"version":3,"sources":["hitPix-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AAClC,MAAI,MAAM,OAAO,UAAP,CAAkB,IAAlB,CAAV;AACA;AACA,MAAI,KAAK,CAAL,GAAS,KAAK,KAAd,GAAsB,KAAK,CAA3B,IAAgC,KAAK,CAAL,GAAS,KAAK,KAAd,GAAsB,KAAK,CAA3D,IAAgE,KAAK,CAAL,GAAS,KAAK,MAAd,GAAuB,KAAK,CAA5F,IAAiG,KAAK,CAAL,GAAS,KAAK,MAAd,GAAuB,KAAK,CAAjI,EAAoI;AAClI,WAAO,KAAP;AACD;AACD;AACA,MAAI,OAAO,KAAK,CAAL,GAAS,KAAK,CAAd,GAAkB,KAAK,CAAvB,GAA2B,KAAK,CAA3C;AACA;AACA,MAAI,OAAO,KAAK,CAAL,GAAS,KAAK,KAAd,GAAsB,KAAK,CAAL,GAAS,KAAK,KAApC,GAA4C,KAAK,CAAL,GAAS,KAAK,KAA1D,GAAkE,KAAK,CAAL,GAAS,KAAK,KAA3F;AACA;AACA,MAAI,OAAO,KAAK,CAAL,GAAS,KAAK,CAAd,GAAkB,KAAK,CAAvB,GAA2B,KAAK,CAA3C;AACA;AACA,MAAI,OAAO,KAAK,CAAL,GAAS,KAAK,MAAd,GAAuB,KAAK,CAAL,GAAS,KAAK,MAArC,GAA8C,KAAK,CAAL,GAAS,KAAK,MAA5D,GAAqE,KAAK,CAAL,GAAS,KAAK,MAA9F;AACA;AACA,MAAI,SAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,OAAO,IAAjC,EAAuC,OAAO,IAA9C;AACA;AACA,OAAK,IAAL;AACA;AACA,MAAI,QAAQ,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAAO,IAApC,EAA0C,OAAO,IAAjD,CAAZ;AACA;AACA,MAAI,SAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,OAAO,IAAjC,EAAuC,OAAO,IAA9C;AACA,OAAK,IAAL;AACA,MAAI,QAAQ,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,OAAO,IAApC,EAA0C,OAAO,IAAjD,CAAZ;AACA,OAAK,IAAL;;AAEA;AACA,MAAI,SAAS,MAAM,IAAN,CAAW,MAAxB;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAApB,EAA4B,KAAK,CAAjC,EAAoC;AAClC,QAAI,MAAM,IAAN,CAAW,CAAX,IAAgB,CAAhB,IAAqB,MAAM,IAAN,CAAW,CAAX,IAAgB,CAAzC,EAA4C;AAC1C,aAAO,IAAP;AACD;AACF;AACF;;AAED","file":"hitPix-compiled-compiled.js","sourcesContent":["'use strict';\n\nfunction hitPix(canvas, obj1, obj2) {\n  var ctx = canvas.getContext('2d');\n  //先进行矩形碰撞的检测\n  if (obj1.x + obj1.width < obj2.x || obj2.x + obj2.width < obj1.x || obj1.y + obj1.height < obj2.y || obj2.y + obj2.height < obj1.y) {\n    return false;\n  }\n  //先找到左边缘最小的\n  var minx = obj1.x < obj2.x ? obj1.x : obj2.x;\n  //再找到右边缘最大的\n  var maxx = obj1.x + obj1.width > obj2.x + obj2.width ? obj1.x + obj1.width : obj2.x + obj2.width;\n  //先找到上边缘最小的\n  var miny = obj1.y < obj2.y ? obj1.y : obj2.y;\n  //再找到下边缘最大的\n  var maxy = obj1.y + obj1.height > obj2.y + obj2.height ? obj1.y + obj1.height : obj2.y + obj2.height;\n  //把整个区域清空\n  ctx.clearRect(minx, miny, maxx - minx, maxy - miny);\n  //单独绘制第一个对象\n  obj1.draw();\n  //获取整个范围内的数据\n  var data1 = ctx.getImageData(minx, miny, maxx - minx, maxy - miny);\n  //再次清空\n  ctx.clearRect(minx, miny, maxx - minx, maxy - miny);\n  obj2.draw();\n  var data2 = ctx.getImageData(minx, miny, maxx - minx, maxy - miny);\n  obj1.draw();\n\n  //data1 和data2 分别是单独绘制图形一和图形2时候的像素数据\n  var length = data1.data.length;\n  for (var i = 3; i < length; i += 4) {\n    if (data1.data[i] > 0 && data2.data[i] > 0) {\n      return true;\n    }\n  }\n}\n\n//# sourceMappingURL=hitPix-compiled.js.map"]}